{"version":3,"sources":["components/SearchBar/SearchBar.module.css","components/MovieList/MovieList.module.css","components/SearchBar/SearchBar.js","components/MovieList/MovieList.js","components/MoviesPage/MoviesPage.js"],"names":["module","exports","SearchBar","state","search","onChange","e","setState","currentTarget","value","onSubmit","preventDefault","props","this","className","s","input","type","autoComplete","autoFocus","placeholder","Component","MovieList","movies","location","moviesPageContainer","map","movie","to","pathname","id","title","defaultProps","withRouter","API_KEY","MoviesPage","error","loading","handleChangeQuery","query","history","push","a","queryString","parse","Axios","get","response","data","results","message","prevProps","prevState","prevQuery","nextQuery","length","toast","from","autoClose"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,MAAQ,yB,qBCA1BD,EAAOC,QAAU,CAAC,oBAAsB,uC,8JCGlCC,E,4MACJC,MAAQ,CACNC,OAAQ,I,EAGVC,SAAW,SAAAC,GACT,EAAKC,SAAS,CAAEH,OAAQE,EAAEE,cAAcC,OACzC,E,EAEDC,SAAW,SAAAJ,GACTA,EAAEK,iBACF,EAAKC,MAAMF,SAAS,EAAKP,MAAMC,OAChC,E,4CAED,WACE,OACE,mCACE,uBAAMM,SAAUG,KAAKH,SAArB,UACE,uBACEI,UAAWC,IAAEC,MACbC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTV,MAAOI,KAAKV,MAAMC,OAClBC,SAAUQ,KAAKR,SACfe,YAAY,kBAEd,wBAAQH,KAAK,SAAb,SACE,gDAKT,K,GAjCqBI,aAmCTnB,I,+BClCToB,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC3B,OACE,mCACE,oBAAIV,UAAWC,IAAEU,oBAAjB,SACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,6BACE,cAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,WAAD,OAAaF,EAAMG,IAAM3B,MAAOqB,GAApD,SACGG,EAAMI,SAFFJ,EAAMG,GADA,OAUxB,EAEDR,EAAUU,aAAe,CACvBD,MAAO,GACPD,GAAI,EACJN,SAAU,MAUGS,kBAAWX,G,yBC1BpBY,EAAU,mCAEVC,E,4MACJhC,MAAQ,CACNC,OAAQ,GACRmB,OAAQ,GACRa,MAAO,KACPC,SAAS,G,EAqCXC,kBAAoB,SAAAC,GAClB,EAAKhC,SAAS,CAAEH,OAAQmC,IACxB,EAAK3B,MAAM4B,QAAQC,KAAnB,2BACK,EAAK7B,MAAMY,UADhB,IAEEpB,OAAO,SAAD,OAAWmC,KAEpB,E,8FAxCD,gCAAAG,EAAA,oEAEsBC,IAAYC,MAAM/B,KAAKD,MAAMY,SAASpB,UAAhDmC,EAFZ,EAEYA,OAFZ,gCAI6BM,IAAMC,IAAN,6CACiBP,EADjB,oBACkCL,EADlC,oBAJ7B,OAIYa,EAJZ,OAOMlC,KAAKN,SAAS,CAAEgB,OAAQwB,EAASC,KAAKC,UAP5C,uDAUIpC,KAAKN,SAAS,CAAE6B,MAAO,KAAMc,UAVjC,yD,6HAcA,WAAyBC,EAAWC,GAApC,uBAAAV,EAAA,oEAEiCC,IAAYC,MAAMO,EAAU3B,SAASpB,QAAnDiD,EAFnB,EAEYd,MAFZ,EAGiCI,IAAYC,MACvC/B,KAAKD,MAAMY,SAASpB,QADPkD,EAHnB,EAGYf,MAGJc,IAAcC,EANtB,gCAO6BT,IAAMC,IAAN,4DACgCZ,EADhC,kBACiDoB,EADjD,wCAP7B,OAOYP,EAPZ,OAUMlC,KAAKN,SAAS,CAAEgB,OAAQwB,EAASC,KAAKC,UACL,IAA7BpC,KAAKV,MAAMoB,OAAOgC,QACpBC,IAAMpB,MAAM,iBAZpB,yDAgBIvB,KAAKN,SAAS,CAAE6B,MAAM,EAAD,KAhBzB,0D,6EA4BA,WACE,OACE,qCACE,cAAC,EAAD,CAAW1B,SAAUG,KAAKyB,oBACzBzB,KAAKV,MAAMoB,OAAOgC,OAAS,GAC1B,cAAC,EAAD,CACEhC,OAAQV,KAAKV,MAAMoB,OACnBpB,MAAO,CAAEsD,KAAM5C,KAAKD,MAAMY,YAG7BX,KAAKV,MAAMiC,OAAS,6BAAKvB,KAAKV,MAAMiC,QACrC,cAAC,IAAD,CAAgBsB,UAAW,QAGhC,K,GAhEsBrC,aAkEVc,W","file":"static/js/5.8f1fa3a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SearchBar_input__3oiBi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesPageContainer\":\"MovieList_moviesPageContainer__1Unlk\"};","import { Component, Route } from 'react';\n// import MoviesPage from '../MoviesPage/MoviesPage';\nimport s from './SearchBar.module.css';\n\nclass SearchBar extends Component {\n  state = {\n    search: '',\n  };\n\n  onChange = e => {\n    this.setState({ search: e.currentTarget.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.search);\n  };\n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.onSubmit}>\n          <input\n            className={s.input}\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            value={this.state.search}\n            onChange={this.onChange}\n            placeholder=\"Search movies\"\n          />\n          <button type=\"submit\">\n            <span>Search</span>\n          </button>\n        </form>\n      </>\n    );\n  }\n}\nexport default SearchBar;\n","import { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport s from './MovieList.module.css';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies, location }) => {\n  return (\n    <>\n      <ul className={s.moviesPageContainer}>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={{ pathname: `/movies/${movie.id}`, state: location }}>\n              {movie.title}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nMovieList.defaultProps = {\n  title: '',\n  id: 0,\n  location: null,\n};\n\nMovieList.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n  }),\n};\n\nexport default withRouter(MovieList);\n","import { Component } from 'react';\nimport Axios from 'axios';\nimport SearchBar from '../SearchBar/SearchBar';\nimport MovieList from '../MovieList/MovieList';\nimport { toast } from 'react-toastify';\nimport { ToastContainer } from 'react-toastify';\nimport queryString from 'query-string';\n\nconst API_KEY = 'b2ac53e8621d02ada7802ecd2ad369f6';\n\nclass MoviesPage extends Component {\n  state = {\n    search: '',\n    movies: [],\n    error: null,\n    loading: false,\n  };\n\n  async componentDidMount() {\n    try {\n      const { query } = queryString.parse(this.props.location.search);\n      if (query) {\n        const response = await Axios.get(\n          `https://api.themoviedb.org/3/movie/${query}?api_key=${API_KEY}&language=en-US`,\n        );\n        this.setState({ movies: response.data.results });\n      }\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    try {\n      const { query: prevQuery } = queryString.parse(prevProps.location.search);\n      const { query: nextQuery } = queryString.parse(\n        this.props.location.search,\n      );\n      if (prevQuery !== nextQuery) {\n        const response = await Axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${nextQuery}&language=en-US&include_adult=false`,\n        );\n        this.setState({ movies: response.data.results });\n        if (this.state.movies.length === 0) {\n          toast.error('Nothing found');\n        }\n      }\n    } catch (error) {\n      this.setState({ error: error });\n    }\n  }\n\n  handleChangeQuery = query => {\n    this.setState({ search: query });\n    this.props.history.push({\n      ...this.props.location,\n      search: `query=${query}`,\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <SearchBar onSubmit={this.handleChangeQuery} />\n        {this.state.movies.length > 0 && (\n          <MovieList\n            movies={this.state.movies}\n            state={{ from: this.props.location }}\n          />\n        )}\n        {this.state.error && <h1>{this.state.error}</h1>}\n        <ToastContainer autoClose={2000} />\n      </>\n    );\n  }\n}\nexport default MoviesPage;\n"],"sourceRoot":""}